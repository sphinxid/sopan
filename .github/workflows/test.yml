name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v ./...

  build:
    name: Build for multiple platforms
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin, freebsd]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
          - goos: freebsd
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o sopan-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        env:
          CGO_ENABLED: 0
